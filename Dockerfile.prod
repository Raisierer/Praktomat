###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
#RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S praktomat && addgroup -S sudo && adduser -S praktomat -G praktomat && adduser -S tester -G praktomat


#RUN addgroup praktomat sudo && addgroup tester sudo

# create the appropriate directories
ENV HOME=/home/app
ENV PRAKTOMAT_ROOT=/home/app/Praktomat
ENV PRAKTOMAT_SUPPORT=/home/app/PraktomatSupport
ENV PRAKTOMAT_SANDBOX=/srv/praktomat/sandbox

RUN mkdir $PRAKTOMAT_ROOT
RUN mkdir $PRAKTOMAT_ROOT/static
RUN mkdir $PRAKTOMAT_SUPPORT
RUN mkdir -p $PRAKTOMAT_SANDBOX

WORKDIR $PRAKTOMAT_ROOT

# install dependencies
RUN apk update && apk add libpq postgresql-dev sudo
RUN apk add gcc g++
RUN apk add swig cyrus-sasl-dev openssl openssl-dev dejagnu 
#RUN apk add docker perl-ipc-run perl-data-guid
#RUN apk add apache2 apache2-dev
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

RUN echo '%wheel ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/wheel
RUN adduser praktomat wheel

# copy entrypoint-prod.sh
#COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $PRAKTOMAT_ROOT
COPY ./mime.types /etc/
#RUN cp /home/app/Praktomat/safe-docker/safe-docker /usr/local/bin

# chown all the files to the app user
RUN chown -R praktomat:praktomat $PRAKTOMAT_ROOT
RUN chown -R praktomat:praktomat $PRAKTOMAT_SUPPORT
RUN chown -R praktomat:praktomat $PRAKTOMAT_SANDBOX

# change to the app user
USER praktomat
WORKDIR $PRAKTOMAT_ROOT/src/

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/Praktomat/entrypoint.prod.sh"]